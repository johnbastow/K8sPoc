# kubectl apply -f kube-ingress-tls.yaml
# Get-AksEdgeNodeAddr -NodeType Linux
# kubectl get services --all-namespaces

# netsh interface portproxy add v4tov4 listenport=8080 listenaddress=192.168.137.90 connectport=30529 connectaddress=192.168.0.2
# netsh interface portproxy add v4tov4 listenport=8443 listenaddress=192.168.137.90 connectport=31839 connectaddress=192.168.0.2

# $Env:KEY_FILE = ".\cert.key"
# $Env:CERT_FILE = ".\cert.pub"
# $Env:HOST = "kbastow-2022.demo.local"
# $Env:CERT_NAME = "kbastow-local-cert"
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout $Env:KEY_FILE -out $Env:CERT_FILE -subj "/CN=$Env:HOST/O=$Env:HOST" -addext "subjectAltName = DNS:$Env:HOST"
# kubectl create secret tls $Env:CERT_NAME --key $Env:KEY_FILE --cert $Env:CERT_FILE

# netsh interface portproxy delete v4tov4 listenport=8080 listenaddress=192.168.137.90 
# New-NetFirewallRule -DisplayName "inbound-aks-web-port" -Direction Inbound -LocalPort 32262 -Protocol TCP -Action Allow

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapi-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    # Write forward everything after the /webapi prefix to the backend.
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
  - hosts:
      - kbastow-2022.demo.local:8443
    secretName: kbastow-local-cert
  rules:
  - host: kbastow-2022.demo.local
    http:
      paths:
      #  Regex for path.  We're looking to pass everything after the /webapi prefix.
      - path: /webapi(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            #  Target backend service.
            name: k8spoc-webapi
            #  Target port.  This is our default ASP.NET 8080 port.
            port:
              number: 8080
